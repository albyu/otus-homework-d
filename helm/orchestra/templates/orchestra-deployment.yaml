apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "orchestra.fullname" . }}-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "orchestra.fullname" . }}
  template:
    metadata:
      labels:
        app: {{ include "orchestra.fullname" . }}
    spec:
      containers: 
        - name: {{ include "orchestra.fullname" . }}-app
          image: aboldyrev1111/otus-homework-d-orchestra:2.0
          #env
          env:
          - name: POSTGRES_APP_USER
            valueFrom:
              secretKeyRef:
                name: {{ include "orchestra.fullname" . }}-secrets
                key: appUsername
          - name: POSTGRES_APP_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "orchestra.fullname" . }}-secrets
                key: appPassword
          - name: POSTGRES_URL
            valueFrom:
              secretKeyRef:
                name: {{ include "orchestra.fullname" . }}-secrets
                key: appDbUrl
          - name: RABBITMQ_USER
            valueFrom:
              secretKeyRef:
                name: {{ include "orchestra.fullname" . }}-secrets
                key: rabbitmqUsername
          - name: RABBITMQ_PASSWORD
            valueFrom:
              secretKeyRef:
                name: {{ include "orchestra.fullname" . }}-secrets
                key: rabbitmqPassword

          #volumeMounts
          volumeMounts:
          - name: {{ include "orchestra.fullname" . }}-configmap
            mountPath: /opt/otus-homework/config
          #livenessProbe
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: web
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 5
          #readinessProbe
          readinessProbe:
            httpGet:
              path: /actuator/health
              port: web
            initialDelaySeconds: 30
            periodSeconds: 5 
          #ports
          ports:
          - name: web
            containerPort: {{.Values.orchestra.service.port}}              
            protocol: TCP
      volumes:
        - name: {{ include "orchestra.fullname" . }}-configmap
          configMap:
            name: {{ include "orchestra.fullname" . }}-configmap                  